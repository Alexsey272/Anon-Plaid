from loader import dp, db, bot
from keyboards import *
from FSM import *
from data import config

from aiogram.types.input_media import InputMedia
from aiogram.types.input_media import InputMediaVideo
from aiogram.types.input_file import InputFile
from aiogram import Bot, types
from handlers.admins_handlers import *
from handlers.users_handlers import *

@dp.callback_query_handler(lambda call: True, state = '*')
async def process(call):
    if call.message:

        if call.data == 'confirm':
            db.add_user(call.message.chat.username, call.message.chat.id)  # –¥–æ–±–∞–≤–ª—è–µ–º —é–∑–µ—Ä–∞ –≤ —Ç–∞–±–ª–∏—á–∫—É –¥–±
            db.confirm(True, call.message.chat.id)
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="*–í–∞—à –æ—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç ‚úÖ*",
                reply_markup=None,
                parse_mode="Markdown")
            await asyncio.sleep(1)
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="*–î–ª—è —É–ª—É—á—à–µ–Ω–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª*",
                reply_markup=my_sex,
                parse_mode="Markdown")

        if call.data == 'iman':
            db.edit_sex(True, call.message.chat.id)
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=f"*–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞*",
                reply_markup=None,
                parse_mode="Markdown")

            with open('video_user/instructions.mp4', 'rb') as video:
                await bot.send_video(call.message.chat.id, video, caption = '–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º')

        elif call.data == 'iwoman':
            db.edit_sex(False, call.message.chat.id)
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=f"*–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞*",
                reply_markup=None,
                parse_mode="Markdown")

            with open('video_user/instructions.mp4', 'rb') as video:
                await bot.send_video(call.message.chat.id, video, caption = '–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º', reply_markup = mark_menu)

            


        if call.data == 'report':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="_–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã_",
                reply_markup=inline_report,
                parse_mode="Markdown")

        if call.data == 'back':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="_–í—ã –º–æ–∂–µ—Ç–µ –æ—Ü–µ–Ω–∏—Ç—å —Å–≤–æ–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏–ª–∏ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è —Å "
                     "–ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö –∫ –¥–∞–Ω–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é_",
                reply_markup=menu_like,
                parse_mode="Markdown")

        if call.data == 'spam':
            await bot.send_message(
                -1001393316058,
                f'*–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∂–∞–ª–æ–±–∞*\n\n*–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n*ID:* _'
                f'{str(call.message.chat.id)}_'
                f'\n\n*–ù–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n*ID:* _'
                f'{str(db.get_last(call.message.chat.id)[0][0])}_'
                f'\n\n*–ü—Ä–∏—á–∏–Ω–∞:* _–†–∞—Å—Å—ã–ª–∫–∞ —Å–ø–∞–º–∞_',
                parse_mode="Markdown")
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ ‚úÖÔ∏è",
                reply_markup=None)

        if call.data == 'sale':
            await bot.send_message(
                -1001393316058,
                f'*–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∂–∞–ª–æ–±–∞*\n\n*–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n*ID:* _'
                f'{str(call.message.chat.id)}_'
                f'\n\n*–ù–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n*ID:* _'
                f'{str(db.get_last(call.message.chat.id)[0][0])}_'
                f'\n\n*–ü—Ä–∏—á–∏–Ω–∞:* _–ü—Ä–æ–¥–∞–∂–∞_',
                parse_mode="Markdown")
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ ‚úÖÔ∏è",
                reply_markup=None)

        if call.data == 'insult':
            await bot.send_message(
                -1001393316058,
                f'*–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∂–∞–ª–æ–±–∞*\n\n*–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n*ID:* _'
                f'{str(call.message.chat.id)}_'
                f'\n\n*–ù–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n*ID:* _'
                f'{str(db.get_last(call.message.chat.id)[0][0])}_'
                f'\n\n*–ü—Ä–∏—á–∏–Ω–∞:* _–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ_',
                parse_mode="Markdown")
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ ‚úÖÔ∏è",
                reply_markup=None)

        if call.data == 'porno':
            await bot.send_message(
                -1001393316058,
                f'*–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∂–∞–ª–æ–±–∞*\n\n*–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n*ID:* _'
                f'{str(call.message.chat.id)}_'
                f'\n\n*–ù–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n*ID:* _'
                f'{str(db.get_last(call.message.chat.id)[0][0])}_'
                f'\n\n*–ü—Ä–∏—á–∏–Ω–∞:* _–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏–∏_',
                parse_mode="Markdown")
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ ‚úÖÔ∏è",
                reply_markup=None)

        if call.data == 'like':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É ‚úÖÔ∏è",
                reply_markup=None)

            await bot.send_message(db.get_last(call.message.chat.id)[0][0], "–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ—Å—Ç–∞–≤–∏–ª –≤–∞–º –ª–∞–π–∫ üëç")

        if call.data == 'dislike':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É ‚úÖÔ∏è",
                reply_markup=None)

            await bot.send_message(db.get_last(call.message.chat.id)[0][0], "–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ—Å—Ç–∞–≤–∏–ª –≤–∞–º –¥–∏–∑–ª–∞–π–∫ üëé")

        if call.data == 'link':
            if call.message.from_user.username is not None:
                await bot.send_message(
                    db.select_connect_with_self(call.message.chat.id)[0],
                    '@' + str(db.get_name_user(call.message.chat.id)))
                await bot.edit_message_text(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    text="‚úÖ *–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É*",
                    parse_mode="Markdown",
                    reply_markup=None)
            else:
                await bot.send_message(
                    call.message.chat.id,
                    '–£ –≤–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω –Ω–∏–∫–Ω–µ–π–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ç–µ–ª–µ–≥—Ä–∞–º–∞!',
                    parse_mode="Markdown")

        if call.data == 'vk':
            if db.get_vk(call.message.chat.id)[0] is None:
                await bot.send_message(
                    call.message.chat.id,
                    '*–£ –≤–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω–∞ —Å—ã–ª–ª–∫–∞ –Ω–∞ –≤–∞—à—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –≤–∫*\n\n'
                    '_–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –≤–∫, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å '
                    '–∫–æ–º–∞–Ω–¥–æ–π /account –≤ –º–µ–Ω—é –±–æ—Ç–∞ –≤–Ω–µ –¥–∏–∞–ª–æ–≥–∞!_',
                    parse_mode="Markdown")
            else:
                await bot.send_message(
                    db.select_connect_with_self(call.message.chat.id)[0],
                    str(db.get_vk(call.message.chat.id)[0]))
                await bot.edit_message_text(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    text="‚úÖ *–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É*",
                    parse_mode="Markdown",
                    reply_markup=None)

        if call.data == 'insta':
            if db.get_insta(call.message.chat.id)[0] is None:
                await bot.send_message(
                    call.message.chat.id,
                    '*–£ –≤–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω–∞ —Å—ã–ª–ª–∫–∞ –Ω–∞ –≤–∞—à—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ instagram*\n\n'
                    '_–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ instagram, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /account –≤ –º–µ–Ω—é –±–æ—Ç–∞ –≤–Ω–µ –¥–∏–∞–ª–æ–≥–∞!_',
                    parse_mode="Markdown")
            else:
                await bot.send_message(
                    db.select_connect_with_self(call.message.chat.id)[0],
                    str(db.get_insta(call.message.chat.id)[0]))
                await bot.edit_message_text(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    text="‚úÖ *–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É*",
                    parse_mode="Markdown",
                    reply_markup=None)

        if call.data == 'not_link':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="_–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ_",
                reply_markup=None,
                parse_mode="Markdown")

        if call.data == 'stg_edit_sex':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text='*–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:*',
                reply_markup=edit_sex,
                parse_mode='Markdown')


        if call.data == 'edit_vk':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text='*–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ*\n\n'
                     '_–î–ª—è –æ—Ç–º–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ "–û—Ç–º–µ–Ω–∞"_',
                reply_markup=None,
                parse_mode='Markdown')
            await Form.vk.set()

        if call.data == 'edit_instagram':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=None,
                text='*–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π Instagram –∞–∫–∫–∞—É–Ω—Ç*'
                     '\n\n_–î–ª—è –æ—Ç–º–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ "–û—Ç–º–µ–Ω–∞"_',
                parse_mode='Markdown')
            await Form.insta.set()

        if call.data == 'edit_sex':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="_–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å_",
                reply_markup=edit_sex,
                parse_mode='Markdown')

        if call.data == 'edit_male':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="_–ü–æ–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: –ú—É–∂—Å–∫–æ–π_",
                reply_markup=None,
                parse_mode='Markdown')
            db.edit_sex(True, call.message.chat.id)

        if call.data == 'edit_female':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="_–ü–æ–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: –ñ–µ–Ω—Å–∫–∏–π_",
                reply_markup=None,
                parse_mode='Markdown')
            db.edit_sex(False, call.message.chat.id)

        if call.data == 'log':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="*–õ–æ–≥–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã*",
                reply_markup=None,
                parse_mode='Markdown')

            await bot.send_document(call.message.chat.id, open("all_log.log", 'rb'))

        if call.data == 'all_admin':
            await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="*–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω*",
                reply_markup=None,
                parse_mode='Markdown')
            for i in db.all_admin_exists():
                await bot.send_message(call.message.chat.id, f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {i[0]}")

        if call.data == 'add_admin':
            if str(call.message.chat.id) == config.BOT_OWNER:
                await Admin.user.set()
                await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="*–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º:*\n\n_–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è, –æ—Ç–ø—Ä–∞–≤—å —Å–ª–æ–≤–æ '–û—Ç–º–µ–Ω–∞'_",
                reply_markup=None,
                parse_mode='Markdown')
            else:
                await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="‚ö†Ô∏è *–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É —á–∞—Ç–∞*",
                reply_markup=None,
                parse_mode='Markdown')

        if call.data == 'del_admin':
            if str(call.message.chat.id) == config.BOT_OWNER:
                await AdminDel.user.set()
                await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="*–í–≤–µ–¥–∏—Ç–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å:*\n\n_–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è, –æ—Ç–ø—Ä–∞–≤—å —Å–ª–æ–≤–æ '–û—Ç–º–µ–Ω–∞'_",
                reply_markup=None,
                parse_mode='Markdown')
            else:
                await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="‚ö†Ô∏è *–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É —á–∞—Ç–∞*",
                reply_markup=None,
                parse_mode='Markdown')

        if call.data == 'ban':
            if db.admin_exists(call.message.chat.id):
                await Block.user.set()
                await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="*–û—Ç–ø—Ä–∞–≤—å—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å*"
            "\n\n_–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ '–û—Ç–º–µ–Ω–∞'_",
                reply_markup=None,
                parse_mode='Markdown')
            else:
                await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="‚ö†Ô∏è *–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º*",
                reply_markup=None,
                parse_mode='Markdown')

        if call.data == 'unban':
            if db.admin_exists(call.message.chat.id):
                await Unblock.user.set()
                await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="*–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å*\n\n_–î–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ '–û—Ç–º–µ–Ω–∞'_",
                reply_markup=None,
                parse_mode='Markdown')
            else:
                await bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="‚ö†Ô∏è *–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º*",
                reply_markup=None,
                parse_mode='Markdown')

        await call.answer()